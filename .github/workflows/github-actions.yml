name: Portfolio Website

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths-ignore:
      - CHANGELOG.md
  workflow_dispatch:

jobs:
  precommit-and-lint:
    name: Pre-Commit and Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npx eslint

  build-and-test:
    name: Build Astro Website
    runs-on: ubuntu-latest
    needs: precommit-and-lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build Astro Website
        run: npm run build

      # - name: Run Tests
      #   run: npm run test

  docker-build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false # Do not push during pull requests
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest

  docker-test:
    name: Test Docker Container
    runs-on: ubuntu-latest
    needs: docker-build
    steps:
      - name: Run Docker Container in Detached Mode
        run: |
          docker run -d -p 8080:8080 --name astro-test ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest

      - name: Test Home Page
        run: |
          sleep 5 # Wait for the container to initialize
          curl -I http://localhost:8080 | grep "200 OK"

      - name: Test Personal Page
        run: curl -I http://localhost:8080/personal | grep "200 OK"

      - name: Test Professional Page
        run: curl -I http://localhost:8080/professional | grep "200 OK"

      - name: Test Gallery Page
        run: curl -I http://localhost:8080/gallery | grep "200 OK"

      - name: Test Hobbies Page
        run: curl -I http://localhost:8080/hobbies | grep "200 OK"

      - name: Stop and Remove Docker Container
        run: docker stop astro-test && docker rm astro-test

  changelog:
    name: Update CHANGELOG.md
    runs-on: ubuntu-latest
    needs: docker-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Generate CHANGELOG.md
        run: npm run release

      - name: Commit Updated CHANGELOG.md
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add CHANGELOG.md package.json package-lock.json
          git commit -m "chore(release): update CHANGELOG.md"
          git push

  docker-push:
    name: Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: changelog
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest
